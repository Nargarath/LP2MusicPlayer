/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.PlayListController;

import java.util.concurrent.TimeUnit;
import javafx.beans.value.ObservableValue;
import javafx.scene.media.MediaPlayer;
import javafx.util.Duration;


/**
 *
 * @author mateu
 */
public class MenuView extends javax.swing.JFrame {

    /**
     * Creates new form MenuView
     */
    public static PlayListController playListController;
    public MediaPlayer player;
    
    public MenuView() {
        initComponents();
        InitPlayList initPlayList  = new InitPlayList();
        this.MidPane.add(initPlayList);
        initPlayList.setVisible(true);
        playListController = new PlayListController();
        
        
        /*
        this.player.currentTimeProperty().addListener(new ChangeListener<Duration>() {
            @Override
            public void changed(ObservableValue<? extends Duration> observable, Duration oldValue, Duration newValue) {
                
            }
        });
        */
    }
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        desktopPane = new javax.swing.JDesktopPane();
        previousMusicButton = new javax.swing.JButton();
        NextMusicButton = new javax.swing.JButton();
        sliderMusic = new javax.swing.JSlider();
        CadastroButton = new javax.swing.JButton();
        LoginButton = new javax.swing.JButton();
        MidPane = new javax.swing.JDesktopPane();
        playButton = new javax.swing.JToggleButton();
        Duration = new javax.swing.JLabel();
        Duration1 = new javax.swing.JLabel();
        Duration2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        nomeMusica = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        AbrirButton = new javax.swing.JMenuItem();
        FecharButton = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        previousMusicButton.setText("<");
        previousMusicButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousMusicButtonActionPerformed(evt);
            }
        });

        NextMusicButton.setText(">");
        NextMusicButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NextMusicButtonActionPerformed(evt);
            }
        });

        sliderMusic.setValue(0);

        CadastroButton.setText("Cadastro");
        CadastroButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CadastroButtonActionPerformed(evt);
            }
        });

        LoginButton.setText("Login");
        LoginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginButtonActionPerformed(evt);
            }
        });

        MidPane.setLayout(new javax.swing.OverlayLayout(MidPane));

        playButton.setText("Play");
        playButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playButtonActionPerformed(evt);
            }
        });

        Duration.setText("/");

        Duration1.setText("00:00");

        Duration2.setText("00:00");

        jLabel1.setText("Tocando Agora:");

        nomeMusica.setText("Nenhuma Musica");

        fileMenu.setMnemonic('f');
        fileMenu.setText("Arquivo");
        fileMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileMenuActionPerformed(evt);
            }
        });

        AbrirButton.setMnemonic('o');
        AbrirButton.setText("Abrir");
        fileMenu.add(AbrirButton);

        FecharButton.setMnemonic('x');
        FecharButton.setText("Fechar");
        FecharButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FecharButtonActionPerformed(evt);
            }
        });
        fileMenu.add(FecharButton);

        menuBar.add(fileMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MidPane)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(previousMusicButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(playButton)
                                        .addGap(106, 106, 106)
                                        .addComponent(NextMusicButton))
                                    .addComponent(sliderMusic, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Duration1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Duration)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Duration2))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nomeMusica))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(CadastroButton, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(LoginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CadastroButton)
                    .addComponent(LoginButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(MidPane, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nomeMusica))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(sliderMusic, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(Duration)
                                .addComponent(Duration2))
                            .addComponent(Duration1))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NextMusicButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(playButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(previousMusicButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void FecharButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FecharButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_FecharButtonActionPerformed

    private void fileMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileMenuActionPerformed

    }//GEN-LAST:event_fileMenuActionPerformed

    private void CadastroButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CadastroButtonActionPerformed
        CadastroView frame = new CadastroView();
        frame.setVisible(true);
    }//GEN-LAST:event_CadastroButtonActionPerformed

    private void LoginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginButtonActionPerformed
        LoginView loginView  = new LoginView();
        this.MidPane.add(loginView);
        loginView.setVisible(true);
    }//GEN-LAST:event_LoginButtonActionPerformed

    private void playButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playButtonActionPerformed
        if(this.playButton.isSelected()){
            this.playButton.setText("Pause");
            
            
            this.player = MenuView.playListController.getPlayer();
            this.player.play();
            this.nomeMusica.setText(MenuView.playListController.getMusic().getName());
            
            System.out.println(MenuView.playListController.getIndex());
            
            Duration totalTime = this.player.getMedia().getDuration();
            String totalTimeString = String.format("%02d:%02d", 
                    TimeUnit.MILLISECONDS.toMinutes((long) totalTime.toMillis()),
                    TimeUnit.MILLISECONDS.toSeconds((long) totalTime.toMillis()) -
                    TimeUnit.MINUTES.toSeconds(TimeUnit.MILLISECONDS.toMinutes((long) totalTime.toMillis())) );
            Duration2.setText(totalTimeString);
            sliderMusic.addChangeListener((ov) -> {
                    if (null != player){
                        //player.seek(timeTotal.multiply(sliderMusic.getValue() / 100.0));
                    }else{
                        sliderMusic.setValue(0);
                    }
                });
            player.currentTimeProperty().addListener((ObservableValue<? extends Duration> observable, Duration oldValue, Duration newValue) -> {
                    String TempoLabel = String.format("%02d:%02d",
                            TimeUnit.MILLISECONDS.toMinutes((long) newValue.toMillis()),
                            TimeUnit.MILLISECONDS.toSeconds((long) newValue.toMillis()) -
                                    TimeUnit.MINUTES.toSeconds(TimeUnit.MILLISECONDS.toMinutes((long) newValue.toMillis())) );
                    
                    //System.out.println((int) (newValue.divide(timeTotal.toMillis()).toMillis() * 100.0));
                    Duration1.setText(TempoLabel);
                    sliderMusic.setValue((int) (newValue.divide(totalTime.toMillis()).toMillis() * 100.0));
                    });
           
        }else{
            this.playButton.setText("Play");
            this.player.pause();
            
        }
    }//GEN-LAST:event_playButtonActionPerformed

    private void NextMusicButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NextMusicButtonActionPerformed
        this.playButton.disable();
        if(MenuView.playListController.getIndex() == MenuView.playListController.getTotalNumber() - 1){
           MenuView.playListController.setIndexMusicSelected(0);
           
       }else{
           MenuView.playListController.setIndexMusicSelected(MenuView.playListController.getIndex()+1);
       }
        this.playButton.enable();
       this.nomeMusica.setText(MenuView.playListController.getMusic().getName());
    }//GEN-LAST:event_NextMusicButtonActionPerformed

    private void previousMusicButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousMusicButtonActionPerformed
        
        if(MenuView.playListController.getIndex() == 0){
           MenuView.playListController.setIndexMusicSelected(MenuView.playListController.getTotalNumber() - 1);
       }else{
           MenuView.playListController.setIndexMusicSelected(MenuView.playListController.getIndex()-1);
       }
       this.playButton.enable();
       this.nomeMusica.setText(MenuView.playListController.getMusic().getName());
    }//GEN-LAST:event_previousMusicButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem AbrirButton;
    private javax.swing.JButton CadastroButton;
    private javax.swing.JLabel Duration;
    private javax.swing.JLabel Duration1;
    private javax.swing.JLabel Duration2;
    private javax.swing.JMenuItem FecharButton;
    private javax.swing.JButton LoginButton;
    private javax.swing.JDesktopPane MidPane;
    private javax.swing.JButton NextMusicButton;
    private javax.swing.JDesktopPane desktopPane;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JLabel nomeMusica;
    private javax.swing.JToggleButton playButton;
    private javax.swing.JButton previousMusicButton;
    private javax.swing.JSlider sliderMusic;
    // End of variables declaration//GEN-END:variables

}
